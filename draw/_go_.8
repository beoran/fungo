386
  exports automatically generated from
  line.go in package "draw"

$$  // exports
    package draw
	import sdl "fungo/sdl"
	type "fungo/sdl"._C_SDL_Surface struct { flags "fungo/sdl"._C_Uint32; format *"fungo/sdl"._C_SDL_PixelFormat; w "fungo/sdl"._C_int; h "fungo/sdl"._C_int; pitch "fungo/sdl"._C_Uint16; _ [2]uint8; pixels "unsafe".Pointer; offset "fungo/sdl"._C_int; hwdata *"fungo/sdl"._Cstruct_private_hwdata; clip_rect "fungo/sdl"._C_SDL_Rect; unused1 "fungo/sdl"._C_Uint32; locked "fungo/sdl"._C_Uint32; _map *"fungo/sdl"._Cstruct_SDL_BlitMap; format_version "fungo/sdl"._C_uint; refcount "fungo/sdl"._C_int }
	type "fungo/sdl"._C_Uint32 uint32
	type "fungo/sdl"._C_SDL_PixelFormat struct { palette *"fungo/sdl"._C_SDL_Palette; BitsPerPixel "fungo/sdl"._C_Uint8; BytesPerPixel "fungo/sdl"._C_Uint8; Rloss "fungo/sdl"._C_Uint8; Gloss "fungo/sdl"._C_Uint8; Bloss "fungo/sdl"._C_Uint8; Aloss "fungo/sdl"._C_Uint8; Rshift "fungo/sdl"._C_Uint8; Gshift "fungo/sdl"._C_Uint8; Bshift "fungo/sdl"._C_Uint8; Ashift "fungo/sdl"._C_Uint8; _ [2]uint8; Rmask "fungo/sdl"._C_Uint32; Gmask "fungo/sdl"._C_Uint32; Bmask "fungo/sdl"._C_Uint32; Amask "fungo/sdl"._C_Uint32; colorkey "fungo/sdl"._C_Uint32; alpha "fungo/sdl"._C_Uint8; _ [3]uint8 }
	type "fungo/sdl"._C_SDL_Palette struct { ncolors "fungo/sdl"._C_int; colors *"fungo/sdl"._C_SDL_Color }
	type "fungo/sdl"._C_int int32
	type "fungo/sdl"._C_SDL_Color struct { r "fungo/sdl"._C_Uint8; g "fungo/sdl"._C_Uint8; b "fungo/sdl"._C_Uint8; unused "fungo/sdl"._C_Uint8 }
	type "fungo/sdl"._C_Uint8 uint8
	type "fungo/sdl"._C_Uint16 uint16
	import unsafe "unsafe"
	type "unsafe".Pointer *any
	type "fungo/sdl"._Cstruct_private_hwdata struct { }
	type "fungo/sdl"._C_SDL_Rect struct { x "fungo/sdl"._C_Sint16; y "fungo/sdl"._C_Sint16; w "fungo/sdl"._C_Uint16; h "fungo/sdl"._C_Uint16 }
	type "fungo/sdl"._C_Sint16 int16
	type "fungo/sdl"._Cstruct_SDL_BlitMap struct { }
	type "fungo/sdl"._C_uint uint32
	type "fungo/sdl".PixelFormat struct { format *"fungo/sdl"._C_SDL_PixelFormat }
	func (format *"fungo/sdl".PixelFormat) BitsPerPixel () uint8
	func (format *"fungo/sdl".PixelFormat) BytesPerPixel () uint8
	func (format *"fungo/sdl".PixelFormat) Rloss () uint8
	func (format *"fungo/sdl".PixelFormat) Gloss () uint8
	func (format *"fungo/sdl".PixelFormat) Bloss () uint8
	func (format *"fungo/sdl".PixelFormat) Aloss () uint8
	func (format *"fungo/sdl".PixelFormat) Rshift () uint8
	func (format *"fungo/sdl".PixelFormat) Gshift () uint8
	func (format *"fungo/sdl".PixelFormat) Bshift () uint8
	func (format *"fungo/sdl".PixelFormat) Ashift () uint8
	func (format *"fungo/sdl".PixelFormat) Rmask () uint32
	func (format *"fungo/sdl".PixelFormat) Gmask () uint32
	func (format *"fungo/sdl".PixelFormat) Bmask () uint32
	func (format *"fungo/sdl".PixelFormat) Amask () uint32
	func (format *"fungo/sdl".PixelFormat) Colorkey () uint32
	func (format *"fungo/sdl".PixelFormat) Alpha () uint8
	func (format *"fungo/sdl".PixelFormat) MapRGB (r uint8, g uint8, b uint8) uint32
	func (format *"fungo/sdl".PixelFormat) MapRGBA (r uint8, g uint8, b uint8, a uint8) uint32
	func (format *"fungo/sdl".PixelFormat) GetRGB (color uint32) (r uint8, g uint8, b uint8)
	func (format *"fungo/sdl".PixelFormat) GetRGBA (color uint32) (r uint8, g uint8, b uint8, a uint8)
	type "fungo/sdl".Rect struct { X int16; Y int16; W uint16; H uint16 }
	func (rect *"fungo/sdl".Rect) ptoSDL () *"fungo/sdl"._C_SDL_Rect
	func (rect "fungo/sdl".Rect) toSDL () "fungo/sdl"._C_SDL_Rect
	type "fungo/sdl".Surface struct { surface *"fungo/sdl"._C_SDL_Surface }
	func (surface *"fungo/sdl".Surface) Flags () uint32
	func (surface *"fungo/sdl".Surface) Format () *"fungo/sdl".PixelFormat
	func (surface *"fungo/sdl".Surface) W () int
	func (surface *"fungo/sdl".Surface) H () int
	func (surface *"fungo/sdl".Surface) Pitch () uint16
	func (surface *"fungo/sdl".Surface) Offset () int
	func (surface *"fungo/sdl".Surface) ClipRect () *"fungo/sdl".Rect
	func (surface *"fungo/sdl".Surface) Destroyed () bool
	func (surface *"fungo/sdl".Surface) Free ()
	func (surface *"fungo/sdl".Surface) W16 () int16
	func (surface *"fungo/sdl".Surface) H16 () int16
	func (screen *"fungo/sdl".Surface) UpdateRect (x int32, y int32, w uint32, h uint32)
	func (screen *"fungo/sdl".Surface) Flip ()
	func (surface *"fungo/sdl".Surface) BitsPerPixel () uint8
	func (surface *"fungo/sdl".Surface) BytesPerPixel () uint8
	func (surface *"fungo/sdl".Surface) MapRGB (r uint8, g uint8, b uint8) uint32
	func (surface *"fungo/sdl".Surface) MapRGBA (r uint8, g uint8, b uint8, a uint8) uint32
	func (surface *"fungo/sdl".Surface) GetRGB (color uint32) (r uint8, g uint8, b uint8)
	func (surface *"fungo/sdl".Surface) GetRGBA (color uint32) (r uint8, g uint8, b uint8, a uint8)
	func (surface *"fungo/sdl".Surface) Lock () bool
	func (surface *"fungo/sdl".Surface) Unlock () bool
	func (surface *"fungo/sdl".Surface) SetColorKey (flag uint32, key uint32) int
	func (surface *"fungo/sdl".Surface) SetAlpha (flag uint32, alpha uint8) int
	func (surface *"fungo/sdl".Surface) SetClipRect (rect *"fungo/sdl".Rect) bool
	func (src *"fungo/sdl".Surface) BlitRect (dst *"fungo/sdl".Surface, srcrect *"fungo/sdl".Rect, dstrect *"fungo/sdl".Rect) int
	func (src *"fungo/sdl".Surface) BlitTo (dst *"fungo/sdl".Surface, x int, y int)
	func (dst *"fungo/sdl".Surface) FillRect (dstrect *"fungo/sdl".Rect, color uint32) int
	func (surface *"fungo/sdl".Surface) DisplayFormat () *"fungo/sdl".Surface
	func (surface *"fungo/sdl".Surface) DisplayFormatAlpha () *"fungo/sdl".Surface
	func (surface *"fungo/sdl".Surface) Accellerate () *"fungo/sdl".Surface
	func (surface *"fungo/sdl".Surface) AccellerateAlpha () *"fungo/sdl".Surface
	func (icon *"fungo/sdl".Surface) WMSetIcon ()
	func (surface *"fungo/sdl".Surface) PixelOutside (x int, y int) bool
	func (surface *"fungo/sdl".Surface) PixelClip (x int, y int) bool
	func (s *"fungo/sdl".Surface) pixelptr8 (x int, y int) *uint8
	func (s *"fungo/sdl".Surface) pixelptr16 (x int, y int) *uint16
	func (s *"fungo/sdl".Surface) pixelptr24 (x int, y int) (? *uint8, ? *uint8, ? *uint8, ? *uint8)
	func (s *"fungo/sdl".Surface) pixelptr32 (x int, y int) *uint32
	func (s *"fungo/sdl".Surface) RawPutPixel8 (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) RawPutPixel16 (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) RawPutPixel24 (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) RawPutPixel32 (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) RawPutPixelBBP (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) RawGetPixel8 (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) RawGetPixel16 (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) RawGetPixel24 (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) RawGetPixel32 (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) RawGetPixelBBP (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) ColorMasks () (? uint32, ? uint32, ? uint32, ? uint32)
	func (s *"fungo/sdl".Surface) RawBlendPixel8 (x int, y int, color uint32, alpha uint8)
	func (s *"fungo/sdl".Surface) RawBlendPixel24 (x int, y int, color uint32, alpha uint8)
	func (s *"fungo/sdl".Surface) RawBlendPixel16 (x int, y int, color uint32, alpha uint8)
	func (s *"fungo/sdl".Surface) RawBlendPixel32 (x int, y int, color uint32, alpha uint8)
	func (s *"fungo/sdl".Surface) RawBlendPixelBBP (x int, y int, color uint32, alpha uint8)
	func (s *"fungo/sdl".Surface) InPutPixel8 (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) InPutPixel16 (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) InPutPixel24 (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) InPutPixel32 (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) InPutPixelBBP (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) InGetPixel8 (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) InGetPixel16 (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) InGetPixel24 (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) InGetPixel32 (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) InGetPixelBBP (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) InBlendPixel8 (x int, y int, color uint32, alpha uint8)
	func (s *"fungo/sdl".Surface) InBlendPixel16 (x int, y int, color uint32, alpha uint8)
	func (s *"fungo/sdl".Surface) InBlendPixel24 (x int, y int, color uint32, alpha uint8)
	func (s *"fungo/sdl".Surface) InBlendPixel32 (x int, y int, color uint32, alpha uint8)
	func (s *"fungo/sdl".Surface) InBlendPixelBBP (x int, y int, color uint32, alpha uint8)
	func (s *"fungo/sdl".Surface) PutPixel (x int, y int, color uint32)
	func (s *"fungo/sdl".Surface) GetPixel (x int, y int) (color uint32)
	func (s *"fungo/sdl".Surface) BlendPixel (x int, y int, color uint32, alpha uint8)
	type "".Surface struct { surface *"fungo/sdl"._C_SDL_Surface }
	func (s *"".Surface) toSDL () *"fungo/sdl".Surface
	func (s *"".Surface) PutPixel (x1 int, y1 int, color uint32)
	func (s *"".Surface) GetPixel (x1 int, y1 int) (color uint32)
	func (s *"".Surface) BlendPixel (x1 int, y1 int, color uint32, alpha uint8)
	func (s *"".Surface) Line (x1 int, y1 int, x2 int, y2 int, color uint32)
	func (s *"".Surface) Circle (x1 int, y1 int, r int, color uint32)
	func (s *"".Surface) Ellipse (x1 int, y1 int, rx int, ry int, color uint32)
	type "".Drawable interface { BlendPixel(x int, y int, color uint32, alpha uint8); GetPixel(x int, y int) (color uint32); PutPixel(x int, y int, color uint32) }
	func "".FromSDL (s *"fungo/sdl".Surface) *"".Surface
	type "".DrawCallback func(x int, y int)
	func "".abs (v int) int
	func "".tern (cond bool, trueval int, falseval int) int
	func "".BresenhamLine (x1 int, y1 int, x2 int, y2 int, callback "".DrawCallback)
	func "".BresenhamCircle (x int, y int, r int, callback "".DrawCallback)
	func "".BresenhamEllipse (x int, y int, rx int, ry int, callback "".DrawCallback)
	var "".initdoneÂ· uint8
	func "".InitÂ· ()

$$  // local types

$$

!
~ E</ ~ E<usr ~ E<local ~ E<var ~ E<arch ~ E<bjmey ~ E<src ~ E<fungo ~ E<draw ~ E<line.go 7      ~ E<fungo ~ E<sdl.a 7     ÿÿÿÿA7 >    ~ ="".FromSDL ~ =type.func(*fungo/sdl.Surface) *"".Surface Ü    =A   A~ @"".s ~ =type.*fungo/sdl.Surface p    @~ @""..noname p       @£      ~ =runtime.throwreturn      =£      ~ ="".*SurfaceÂ·toSDL Ü    =A   A~ =type.*"".Surface p    @p       @£           =£      ~ =	"".*SurfaceÂ·PutPixel Ü    	=E      Ap    @~ S
"".s p    
S     =p       S~ Sfungo/sdl.s p    S~ @"".x1 ~ =type.int p       @~ Sfungo/sdl.x p       S~ @"".y1 p       @~ Sfungo/sdl.y p       S~ @"".color ~ =type.uint32 p       @~ Sfungo/sdl.color p       S~ =fungo/sdl.*SurfaceÂ·PutPixel      =£      ~ ="".*SurfaceÂ·GetPixel Ü    =E      Ap    A~ @"".s p    @~ S"".s p    S     =p       Sp    Sp       @p       Sp       @p       S~ =fungo/sdl.*SurfaceÂ·GetPixel      =p       Sp       @£           =£      ~ ="".*SurfaceÂ·BlendPixel Ü "   =E      A~ @"".s p "   @~ S"".s p "   S "    =p "      Sp "   Sp "      @p "      Sp "      @p "      Sp "      @p "      S~ @"".alpha ~ =type.uint8 o "      @~ Sfungo/sdl.alpha o "      S~ =fungo/sdl.*SurfaceÂ·BlendPixel  "    =£ "     ~ = "".*SurfaceÂ·Line Ü -    =E0      Ap -      AS~ =!runtime.mal ~ ="type.func(int32) **"".Surface  -    !="p -      S~ ?#"".&s ~ =$type.**"".Surface p -   ôÿÿÿ#?$~ @%"".s p -   %@p -   Op -      AS~ =&type.func(int32) *uint32  -    !=&p -      Sp -      @p -   Op *      AS~ ='""._func_001 ~ =(type.func(**"".Surface, *uint32, uintptr, int, int) p *   = 'D(p *      Sp *   ôÿÿÿ#?$p *      Sp *      S~ =)runtime.closure ~ =*type.func(int, func(**"".Surface, *uint32, uintptr, int, int), **"".Surface, *uint32) func(int, int)  ,    )=*p ,      Sp -      @~ S+"".x1 p -   +Sp -      @~ S,"".y1 p -      ,S~ @-"".x2 p -      -@~ S."".x2 p -      .S~ @/"".y2 p -      /@~ S0"".y2 p -      0S~ S1"".callback p -      1S~ ="".BresenhamLine ~ =type.func(int, int, int, int, "".DrawCallback)  -    =£ -     ~ ="".*SurfaceÂ·Circle Ü :   =E0      Ap :      AS :    !="p :      Sp :   ôÿÿÿ#?$p :   %@p :   Op :      AS :    !=&p :      Sp :      @p :   Op 7      AS~ =""._func_002 p 7   = D(p 7      Sp 7   ôÿÿÿ#?$p 7      Sp 7      S 9    )=*p 9      S~ @"".x1 p :      @~ S"".x p :   S~ @"".y1 p :      @~ S"".y p :      S~ @	"".r p :      	@~ S
"".r p :      
Sp :      1S~ ="".BresenhamCircle ~ =type.func(int, int, int, "".DrawCallback)  :    =£ :     ~ ="".*SurfaceÂ·Ellipse Ü F   =E0      Ap F      AS F    !="p F      Sp F   ôÿÿÿ#?$p F   %@p F   Op F      AS F    !=&p F      Sp F      @p F   Op C      AS~ =""._func_003 p C   = D(p C      Sp C   ôÿÿÿ#?$p C      Sp C      S E    )=*p E      S~ =type.int p F      @p F   Sp F      @p F      S~ @"".rx p F      @~ S"".rx p F      S~ @"".ry p F      @~ S"".ry p F      Sp F      1S~ ="".BresenhamEllipse  F    =£ F     ~ ="".abs ~ =type.func(int) int Ü Q   =E      A~ @"".v p Q   @	W P       <W P        <p P   	& P   	AU P       <~ @""..noname p P   	   @£ P     W P        <p Q   	 Q    p Q      @£ Q     ~ =runtime.throwreturn  Q    =£ Q     ~ ="".tern ~ =type.func(bool, int, int) int Ü W   =A   AW V    ©   <W V    ¯   <~ @"".cond ~ =type.bool % V   @AO V    ¨   <~ @"".trueval p V      @p V      @£ V     W V    ¯   <~ @"".falseval p W      @p W      @£ W      W    =£ W     Ü z   =Ex      A~ @ "".x2 p ]       @	Ö ]   @	~ @!"".y2 p ^      !@Ö ^      @~ ?""".dy p ^   øÿÿÿ"?W _    ½   <~ S#"".cond o _      A#SW _    Á   <~ ?$"".dx p _   	üÿÿÿ$?& _   	AU _    »   <o _   A#S~ S%"".trueval p _   ÿÿÿÿA   %S~ S&"".falseval p _      A   &S _    =p _      S~ ?'"".sdx p _   ôÿÿÿ'?W `    É   <o `      A#SW `    Í   <p `   øÿÿÿ"?& `   AU `    Ç   <o `   A#Sp `   ÿÿÿÿA   %Sp `      A   &S `    =p `      Sp a   ôÿÿÿ'?	= a   üÿÿÿ$?	C a    	~ ?("".sdy p b   ðÿÿÿ(?= b   øÿÿÿ"?C b    ~ ?)"".x p c   Aìÿÿÿ)?~ ?*"".y p d   Aèÿÿÿ*?p e   @p f      @W h    Ý   <W h      <p h   	üÿÿÿ$?p h   øÿÿÿ"?& h   	U h    Ü   <p i   AW i    å   <W i      <C i    p i   ìÿÿÿ)?p i   	& i   	P i    ã   <~ ?+"".px p j   äÿÿÿ+?~ S,"".x p j   ,S~ ?-"".py p j   àÿÿÿ-?~ S."".y p j      .S~ @/"".callback ~ =0type."".DrawCallback p j      /@0 j    ~ ?1"".x p j   ìÿÿÿ1?p j   äÿÿÿ+?p j   àÿÿÿ-?p j   üÿÿÿ$?	p k   øÿÿÿ"?~ ?"".y 	 k   èÿÿÿ?W l    ÷   <W l    þ   <p l   èÿÿÿ?
& l   
	U l    ö   <Ö m   	èÿÿÿ?p n   ðÿÿÿ(?	 n   W l    þ   <p p   ôÿÿÿ'?	 p   W i    ä   <W h    !  <p s   AW s      <W s    !  <C s    p s   èÿÿÿ?& s   P s      <p t   äÿÿÿ+?~ S"".x p t   Sp t   àÿÿÿ-?~ S"".y p t      Sp t      /@0 t    ~ ?"".y p t   èÿÿÿ?p t   äÿÿÿ+?p t   àÿÿÿ-?p t   øÿÿÿ"?p u   üÿÿÿ$?~ ?"".x 	 u   ìÿÿÿ?W v      <W v      <p v   ìÿÿÿ?
& v   
U v      <Ö w   ìÿÿÿ?p x   ôÿÿÿ'?	 x   W v      <p z   ðÿÿÿ(?	 z   W s      <£ z     Ü    =Et      A~ @"".r p       @
p    Ap       AÖ    
~ ?"".df p    ôÿÿÿ?~ ?"".d_e p       Aðÿÿÿ?p    þÿÿÿA=    
	       A~ ?	"".d_se p    ìÿÿÿ	?W     /  <W       <p    
&    
Q     .  <~ @
"".x p    
@	    ~ ?"".cx p    üÿÿÿ?~ S"".x p    S~ @"".y p       @	    
~ ?"".cy p    
øÿÿÿ?~ S"".y p       Sp       /@0     ~ @"".x ~ =type.int p    @Ö    üÿÿÿ?~ S"".x p    S~ @"".y p       @	    øÿÿÿ?~ S"".y p       Sp       /@0     ~ @"".x p    @	    üÿÿÿ?~ S"".x p    S~ @"".y p       @Ö    øÿÿÿ?~ S"".y p       Sp       /@0     ~ @"".x p    @Ö    üÿÿÿ?~ S"".x p    S~ @"".y p       @Ö    øÿÿÿ?~ S"".y p       Sp       /@0     ~ @"".x p    @	    øÿÿÿ?~ S"".x p    S~ @"".y p       @	    üÿÿÿ?~ S "".y p        Sp       /@0     ~ @!"".x p    !@	    øÿÿÿ?~ S""".x p    "S~ @#"".y p       #@Ö    üÿÿÿ?~ S$"".y p       $Sp       /@0     ~ @%"".x p    %@Ö    øÿÿÿ?~ S&"".x p    &S~ @'"".y p       '@	    üÿÿÿ?~ S("".y p       (Sp       /@0     ~ @)"".x p    )@Ö    øÿÿÿ?~ S*"".x p    *S~ @+"".y p       +@Ö    üÿÿÿ?~ S,"".y p       ,Sp       /@0     p    üÿÿÿ?p    øÿÿÿ?
W     x  <W       <p    ôÿÿÿ?&    AP     w  <p    ðÿÿÿ?	    ôÿÿÿ?	       Aðÿÿÿ?	       Aìÿÿÿ	?W       <p    ìÿÿÿ	?	    ôÿÿÿ?	       Aðÿÿÿ?	       Aìÿÿÿ	?/     
C     W     /  <£      ~ =-"".BresenhamEllipse ~ =.type.func(int, int, int, int, "".DrawCallback) Ü ð   -=.E     Ap     AW ¤      <W ¤      <~ @/"".rx p ¤      /@& ¤      AP ¤      <p ¤      A   /@W ¤      <W ¦      <W ¦      <~ @0"".ry p ¦      0@& ¦      AP ¦      <p ¦      A   0@W ¦      <p ¨   ÿÿ  A	p ¨   ÿÿ  A~ ?1"".j p ¨   ÿÿ  Aìÿÿÿ1?~ ?"".k p ¨   ÿÿ  Aèÿÿÿ?W ª      <W ª    y  <p ª      /@
p ª      0@& ª   
S ª      <~ ?"".ix p «   Aüÿÿÿ?p ¬      /@p ¬   = ¬   @   A~ ?"".iy p ¬   øÿÿÿ?W ®    ©  <W ®    x  <& ®   	S ®    ¨  <~ ?"".oh p ¯   	äÿÿÿ?~ ?"".oi p °   àÿÿÿ?p ±   ìÿÿÿ1?~ ?"".oj p ±   Üÿÿÿ?p ²   èÿÿÿ?~ ?"".ok p ²   Øÿÿÿ?p ´   üÿÿÿ?	 ´       A¯ ´      Ap ´   	p µ   øÿÿÿ?	 µ       A¯ µ      Ap µ   ~ ?"".autotmp_0063 p ¶   °ÿÿÿ?p ¶   
p ¶   	= ¶      0@p ¶      /@Ç ¶     : ¶    p ¶   ìÿÿÿ1?p ¶   
p ¶   °ÿÿÿ?~ ?	"".autotmp_0068 p ·   ÿÿÿ	?~ ?
"".i p ·   ðÿÿÿ
?p ·   = ·      0@p ·      /@Ç ·     : ·    p ·   èÿÿÿ?p ·   ÿÿÿ	?W ¹    Î  <W ¹      <W ¹    Ð  <W ¹    Ø  <p ¹   äÿÿÿ?& ¹   	X ¹    Ï  <p ¹   èÿÿÿ?
p ¹   Øÿÿÿ?& ¹   
X ¹    Ï  <W ¹    Í  <p ¹   àÿÿÿ?& ¹   	P ¹    Í  <~ @"".x p º   @	 º   	~ ?"".h p º   	ôÿÿÿ?~ S"".x p º   S~ @"".y p º      @	 º   èÿÿÿ?~ S"".y p º      S~ @"".callback ~ =type."".DrawCallback p º      @ º    ~ =type.int p º   ðÿÿÿ
?p º   ôÿÿÿ?	W »    è  <W »    õ  <& »   	AO »    ç  <~ @"".x p »   @Ö »   	~ S"".x p »   S~ @"".y p »      @	 »   èÿÿÿ?~ S"".y p »      Sp »      @ »    p »   ðÿÿÿ
?p »   ôÿÿÿ?	W »    õ  <W ¼    ÷  <W ¼      <p ¼   èÿÿÿ?& ¼   AO ¼    ö  <~ @"".x p ½   @	 ½   	~ S"".x p ½   S~ @"".y p ½      @Ö ½   èÿÿÿ?~ S"".y p ½      Sp ½      @ ½    p ½   ðÿÿÿ
?p ½   ôÿÿÿ?	W ¾      <W ¾      <& ¾   	AO ¾      <~ @"".x p ¾   @Ö ¾   	~ S"".x p ¾   S~ @"".y p ¾      @Ö ¾   èÿÿÿ?~ S"".y p ¾      Sp ¾      @ ¾    p ¾   ðÿÿÿ
?p ¾   ôÿÿÿ?	W ¾      <W ¼      <W ¹      <W Â      <W Â    `  <W Â      <W Â    !  <p Â   àÿÿÿ?& Â   X Â      <p Â   ìÿÿÿ1?
p Â   Üÿÿÿ?& Â   
X Â      <W Â      <p Â   	ôÿÿÿ?p Â   	
p Â   & Â   	P Â      <~ @"".x p Ã   @	 Ã   ~ S "".x p Ã    S~ @!"".y p Ã      !@	 Ã   ìÿÿÿ1?~ S""".y p Ã      "Sp Ã      @ Ã    p Ã   ðÿÿÿ
?p Ã   ôÿÿÿ?	W Ä    2  <W Ä    ?  <& Ä   AO Ä    1  <~ @#"".x p Ä   #@Ö Ä   ~ S$"".x p Ä   $S~ @%"".y p Ä      %@	 Ä   ìÿÿÿ1?~ S&"".y p Ä      &Sp Ä      @ Ä    p Ä   ðÿÿÿ
?p Ä   ôÿÿÿ?	W Ä    ?  <W Å    A  <W Å    _  <p Å   ìÿÿÿ1?& Å   AO Å    @  <~ @'"".x p Æ   '@	 Æ   ~ S("".x p Æ   (S~ @)"".y p Æ      )@Ö Æ   ìÿÿÿ1?~ S*"".y p Æ      *Sp Æ      @ Æ    p Æ   ðÿÿÿ
?p Æ   ôÿÿÿ?	W Ç    P  <W Ç    ^  <p Ç   & Ç   AO Ç    O  <~ @+"".x p Ç   +@Ö Ç   ~ S,"".x p Ç   ,S~ @-"".y p Ç      -@Ö Ç   ìÿÿÿ1?~ S."".y p Ç      .Sp Ç      @ Ç    p Ç   ðÿÿÿ
?p Ç   ôÿÿÿ?	W Ç    ^  <W Å    _  <W Â    `  <~ ?/"".autotmp_0108 p Ë   üþÿÿ/?p Ë   
p Ë   øÿÿÿ?~ @0"".rx p Ë      0@Ç Ë     : Ë    p Ë   p Ë   
p Ë   üþÿÿ/?	 Ë   üÿÿÿ?p Ë   üÿÿÿ?~ ?1"".autotmp_0112 p Ì   ìþÿÿ1?~ ?"".autotmp_0113 p Ì   èþÿÿ?p Ì   üÿÿÿ?p Ì      0@Ç Ì     : Ì    p Ì   p Ì   èþÿÿ?
p Ì   ìþÿÿ1?p Ì   øÿÿÿ?Ö Ì   p Ì   øÿÿÿ?W ®    ©  <W ª    R  <p Ï   Aüÿÿÿ?~ @"".ry p Ð      @p Ð   = Ð   @   Ap Ð   øÿÿÿ?W Ò      <W Ò    R  <& Ò   	S Ò      <p Ó   	äÿÿÿ?p Ô   àÿÿÿ?~ ?"".j p Õ   ìÿÿÿ?p Õ   Üÿÿÿ?~ ?"".k p Ö   èÿÿÿ?p Ö   Øÿÿÿ?~ ?"".ix p Ø   üÿÿÿ?	 Ø       A¯ Ø      Ap Ø   	~ ?"".iy p Ù   øÿÿÿ?	 Ù       A¯ Ù      Ap Ù   ~ ?"".autotmp_0121 p Ú   Èþÿÿ?p Ú   
p Ú   	= Ú      0@p Ú      @Ç Ú     : Ú    p Ú   ìÿÿÿ?p Ú   
p Ú   Èþÿÿ?~ ?"".autotmp_0126 p Û   ´þÿÿ?p Û   = Û      0@p Û      @Ç Û     : Û    p Û   èÿÿÿ?p Û   ´þÿÿ?W Ý    ¤  <W Ý    í  <W Ý    ¦  <W Ý    ¯  <p Ý   ìÿÿÿ?
~ ?	"".oj p Ý   Üÿÿÿ	?& Ý   
X Ý    ¥  <p Ý   ðÿÿÿ
?~ ?
"".oi p Ý   àÿÿÿ
?& Ý   X Ý    ¥  <W Ý    £  <p Ý   	ôÿÿÿ?~ ?"".i p Ý   ðÿÿÿ?& Ý   	P Ý    £  <~ @"".x p Þ   @	 Þ   ìÿÿÿ?~ S"".x p Þ   S~ @"".y p Þ      @	 Þ   ~ S"".y p Þ      Sp Þ      @ Þ    p Þ   ðÿÿÿ?~ ?"".h p Þ   ôÿÿÿ?	W ß    ¿  <W ß    Í  <p ß   ìÿÿÿ?& ß   AO ß    ¾  <~ @"".x p ß   @Ö ß   ìÿÿÿ?~ S"".x p ß   S~ @"".y ~ =type.int p ß      @	 ß   ~ S"".y p ß      S~ @"".callback ~ =type."".DrawCallback p ß      @ ß    p ß   ðÿÿÿ?p ß   ôÿÿÿ?	W ß    Í  <W à    Ï  <W à    ì  <& à   AO à    Î  <~ @"".x p á   @	 á   ìÿÿÿ?~ S"".x p á   S~ @"".y p á      @Ö á   ~ S"".y p á      Sp á      @ á    p á   ðÿÿÿ?p á   ôÿÿÿ?	W â    Ý  <W â    ë  <p â   ìÿÿÿ?& â   AO â    Ü  <~ @"".x p â   @Ö â   ìÿÿÿ?~ S"".x p â   S~ @"".y p â      @Ö â   ~ S"".y p â      Sp â      @ â    p â   ðÿÿÿ?p â   ôÿÿÿ?	W â    ë  <W à    ì  <W Ý    í  <W æ    ï  <W æ    :  <W æ    ñ  <W æ    ú  <p æ   èÿÿÿ?
~ ? "".ok p æ   Øÿÿÿ ?& æ   
X æ    ð  <p æ   	
~ ?!"".oh p æ   äÿÿÿ!?& æ   	X æ    ð  <W æ    î  <p æ   	
p æ   àÿÿÿ
?& æ   	P æ    î  <~ @""".x p ç   "@	 ç   èÿÿÿ?~ S#"".x p ç   #S~ @$"".y p ç      $@	 ç   	p ç   	ôÿÿÿ?~ S%"".y p ç      %Sp ç      @ ç    p ç   ðÿÿÿ?p ç   ôÿÿÿ?	W è      <W è      <p è   èÿÿÿ?& è   AO è    
  <~ @&"".x p è   &@Ö è   èÿÿÿ?~ S'"".x p è   'S~ @("".y p è      (@	 è   	~ S)"".y p è      )Sp è      @ è    p è   ðÿÿÿ?p è   ôÿÿÿ?	W è      <W é      <W é    9  <p é   	& é   	AO é      <~ @*"".x p ê   *@	 ê   èÿÿÿ?~ S+"".x p ê   +S~ @,"".y p ê      ,@Ö ê   	~ S-"".y p ê      -Sp ê      @ ê    p ê   ðÿÿÿ?p ê   ôÿÿÿ?	W ë    *  <W ë    8  <p ë   èÿÿÿ?& ë   AO ë    )  <~ @."".x p ë   .@Ö ë   èÿÿÿ?~ S/"".x p ë   /S~ @0"".y p ë      0@Ö ë   	~ S1"".y p ë      1Sp ë      @ ë    p ë   ðÿÿÿ?p ë   ôÿÿÿ?	W ë    8  <W é    9  <W æ    :  <~ ?"".autotmp_0166 p ï   þÿÿ?p ï   
p ï   øÿÿÿ?p ï      @Ç ï     : ï    p ï   p ï   
p ï   þÿÿ?	 ï   üÿÿÿ?p ï   üÿÿÿ?~ ?"".autotmp_0170 p ð   þÿÿ?~ ?"".autotmp_0171 p ð    þÿÿ?p ð   üÿÿÿ?~ @"".ry p ð      @Ç ð     : ð    p ð   p ð    þÿÿ?
p ð   þÿÿ?p ð   øÿÿÿ?Ö ð   p ð   øÿÿÿ?W Ò      <£ ð     ~ ="".InitÂ· ~ =type.func() Ü ô   =   A~ ="".initdoneÂ· ~ =type.uint8 o ô   =	W ô    W  <W ô    e  <o ô   	o ô   % ô   AO ô    V  <W ô    ]  <W ô    c  <o ô   	o ô   % ô      AX ô    \  <£ ô     W ô    c  <~ =	runtime.throwinit  ô    	=W ô    e  <o ô      A=~ =
fungo/sdl.InitÂ·  ô    
=o ô      A=£ ô     £ ô     ~ =""._func_001 ~ =type.func(**"".Surface, *uint32, uintptr, int, int) Ü +   =E      A~ @"".x p +      @~ S"".x1 p +      S~ @"".y p +      @~ S"".y1 p +      S~ @"".&color ~ =type.*uint32 p +      @p +   R~ S"".color p +      S~ @"".&s ~ =type.**"".Surface p +   @p +   R~ S"".s p +   S~ ="".*SurfaceÂ·PutPixel  +    =£ +     ~ =""._func_002 Ü 8   =E      A~ =type.int p 8      @p 8      Sp 8      @p 8      Sp 8      @p 8   Rp 8      Sp 8   @p 8   Rp 8   S 8    =£ 8     ~ =""._func_003 Ü D   =E      Ap D      @p D      Sp D      @p D      Sp D      @p D   Rp D      Sp D   @p D   Rp D   S D    =£ D     5 ô   =   A~ =type._."".Surface ~ =go.string."Surface" - ô   ;== D~ =go.importpath."". - ô   ;   == D- ô   ;   ==    D- ô   ;   =A- ô   ;   =A5 ô   =   A~ =type."".Surface ~ =type.*runtime.StructType - ô   ;== D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =füäA- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ = go.string."draw.Surface" - ô   ;   ==  D- ô   ;   == D- ô   ;   == (   D- ô   ;    =   A- ô   ;$   =   A~ =!go.string."surface" - ô   ;(   == !D~ ="go.string."sdl" - ô   ;,   == "D~ =#type.*fungo/sdl._C_SDL_Surface - ô   ;0   == #D- ô   ;4   =A- ô   ;8   =A5 ô   =<   A~ =$type.func(*"".Surface, int, int, uint32, uint8) ~ =%type.*runtime.FuncType - ô   ;$== %D- ô   ;   $==    $D- ô   ;   $=   A- ô   ;   $=ìY±ôA- ô   ;   $=A- ô   ;   $=   A- ô   ;   $=   A- ô   ;   $=   A~ =&go.string."func(*draw.Surface, int, int, uint32, uint8)" - ô   ;   $== &D- ô   ;   $=A- ô   ;   $=A- ô   ;    $== 8   $D- ô   ;$   $=   A- ô   ;(   $=   A- ô   ;,   $== L   $D- ô   ;0   $=A- ô   ;4   $=A~ ='type.*"".Surface - ô   ;8   $== 'D- ô   ;<   $== D- ô   ;@   $== D~ =(type.uint32 - ô   ;D   $== (D- ô   ;H   $== D5 ô   ;$=L   A~ =)type.func(*"".Surface, int, int, int, uint32) - ô   ;)== %D- ô   ;   )==    )D- ô   ;   )=   A- ô   ;   )=¹WÁA- ô   ;   )=A- ô   ;   )=   A- ô   ;   )=   A- ô   ;   )=   A~ =*go.string."func(*draw.Surface, int, int, int, uint32)" - ô   ;   )== *D- ô   ;   )=A- ô   ;   )=A- ô   ;    )== 8   )D- ô   ;$   )=   A- ô   ;(   )=   A- ô   ;,   )== L   )D- ô   ;0   )=A- ô   ;4   )=A- ô   ;8   )== 'D- ô   ;<   )== D- ô   ;@   )== D- ô   ;D   )== D- ô   ;H   )== (D5 ô   ;)=L   A~ =+type.func(*"".Surface, int, int, int, int, uint32) - ô   ;+== %D- ô   ;   +==    +D- ô   ;   +=   A- ô   ;   +=2 hÅA- ô   ;   +=A- ô   ;   +=   A- ô   ;   +=   A- ô   ;   +=   A~ =,go.string."func(*draw.Surface, int, int, int, int, uint32)" - ô   ;   +== ,D- ô   ;   +=A- ô   ;   +=A- ô   ;    +== 8   +D- ô   ;$   +=   A- ô   ;(   +=   A- ô   ;,   +== P   +D- ô   ;0   +=A- ô   ;4   +=A- ô   ;8   +== 'D- ô   ;<   +== D- ô   ;@   +== D- ô   ;D   +== D- ô   ;H   +== D- ô   ;L   +== (D5 ô   ;+=P   A~ =-type.func(*"".Surface, int, int) uint32 - ô   ;-== %D- ô   ;   -==    -D- ô   ;   -=   A- ô   ;   -=õlyA- ô   ;   -=A- ô   ;   -=   A- ô   ;   -=   A- ô   ;   -=   A~ =.go.string."func(*draw.Surface, int, int) uint32" - ô   ;   -== .D- ô   ;   -=A- ô   ;   -=A- ô   ;    -== 8   -D- ô   ;$   -=   A- ô   ;(   -=   A- ô   ;,   -== D   -D- ô   ;0   -=   A- ô   ;4   -=   A- ô   ;8   -== 'D- ô   ;<   -== D- ô   ;@   -== D- ô   ;D   -== (D5 ô   ;-=H   A~ =/type.func(*"".Surface, int, int, uint32) - ô   ;/== %D- ô   ;   /==    /D- ô   ;   /=   A- ô   ;   /=°xáA- ô   ;   /=A- ô   ;   /=   A- ô   ;   /=   A- ô   ;   /=   A~ =0go.string."func(*draw.Surface, int, int, uint32)" - ô   ;   /== 0D- ô   ;   /=A- ô   ;   /=A- ô   ;    /== 8   /D- ô   ;$   /=   A- ô   ;(   /=   A- ô   ;,   /== H   /D- ô   ;0   /=A- ô   ;4   /=A- ô   ;8   /== 'D- ô   ;<   /== D- ô   ;@   /== D- ô   ;D   /== (D5 ô   ;/=H   A~ =1type.func(*"".Surface) *fungo/sdl.Surface - ô   ;1== %D- ô   ;   1==    1D- ô   ;   1=   A- ô   ;   1=1QÈRA- ô   ;   1=A- ô   ;   1=   A- ô   ;   1=   A- ô   ;   1=   A~ =go.string."func(*draw.Surface) *sdl.Surface" - ô   ;   1== D- ô   ;   1=A- ô   ;   1=A- ô   ;    1== 8   1D- ô   ;$   1=   A- ô   ;(   1=   A- ô   ;,   1== <   1D- ô   ;0   1=   A- ô   ;4   1=   A- ô   ;8   1== 'D~ =type.*fungo/sdl.Surface - ô   ;<   1== D5 ô   ;1=@   A~ =type._.*"".Surface - ô   ;=A- ô   ;   =A- ô   ;   ==    D- ô   ;   =   A- ô   ;   =   A~ =go.string."BlendPixel" - ô   ;   == D- ô   ;   =A~ =type.func(int, int, uint32, uint8) - ô   ;== %D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =­¸ûëA- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."func(int, int, uint32, uint8)" - ô   ;   == D- ô   ;   =A- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =   A- ô   ;(   =   A- ô   ;,   == H   D- ô   ;0   =A- ô   ;4   =A- ô   ;8   == D- ô   ;<   == D- ô   ;@   == (D- ô   ;D   == D5 ô   ;=H   A- ô   ;   == D- ô   ;    == $D~ ="".*SurfaceÂ·BlendPixel - ô   ;$   == D- ô   ;(   == D~ =go.string."Circle" - ô   ;,   == D- ô   ;0   =A~ =	type.func(int, int, int, uint32) - ô   ;	== %D- ô   ;   	==    	D- ô   ;   	=   A- ô   ;   	=kkA- ô   ;   	=A- ô   ;   	=   A- ô   ;   	=   A- ô   ;   	=   A~ =
go.string."func(int, int, int, uint32)" - ô   ;   	== 
D- ô   ;   	=A- ô   ;   	=A- ô   ;    	== 8   	D- ô   ;$   	=   A- ô   ;(   	=   A- ô   ;,   	== H   	D- ô   ;0   	=A- ô   ;4   	=A- ô   ;8   	== D- ô   ;<   	== D- ô   ;@   	== D- ô   ;D   	== (D5 ô   ;	=H   A- ô   ;4   == 	D- ô   ;8   == )D~ ="".*SurfaceÂ·Circle - ô   ;<   == D- ô   ;@   == D~ =go.string."Ellipse" - ô   ;D   == D- ô   ;H   =A~ =type.func(int, int, int, int, uint32) - ô   ;== %D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =©Ä¥ÌA- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."func(int, int, int, int, uint32)" - ô   ;   == D- ô   ;   =A- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =   A- ô   ;(   =   A- ô   ;,   == L   D- ô   ;0   =A- ô   ;4   =A- ô   ;8   == D- ô   ;<   == D- ô   ;@   == D- ô   ;D   == D- ô   ;H   == (D5 ô   ;=L   A- ô   ;L   == D- ô   ;P   == +D~ ="".*SurfaceÂ·Ellipse - ô   ;T   == D- ô   ;X   == D~ =go.string."GetPixel" - ô   ;\   == D- ô   ;`   =A~ =type.func(int, int) uint32 - ô   ;== %D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =;2TWA- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."func(int, int) uint32" - ô   ;   == D- ô   ;   =A- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =   A- ô   ;(   =   A- ô   ;,   == @   D- ô   ;0   =   A- ô   ;4   =   A- ô   ;8   == D- ô   ;<   == D- ô   ;@   == (D5 ô   ;=D   A- ô   ;d   == D- ô   ;h   == -D~ ="".*SurfaceÂ·GetPixel - ô   ;l   == D- ô   ;p   == D~ =go.string."Line" - ô   ;t   == D- ô   ;x   =A- ô   ;|   == D- ô   ;   == +D~ ="".*SurfaceÂ·Line - ô   ;   == D- ô   ;   == D~ =go.string."PutPixel" - ô   ;   == D- ô   ;   =A~ =type.func(int, int, uint32) - ô   ;== %D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =´£ÆA- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."func(int, int, uint32)" - ô   ;   == D- ô   ;   =A- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =   A- ô   ;(   =   A- ô   ;,   == D   D- ô   ;0   =A- ô   ;4   =A- ô   ;8   == D- ô   ;<   == D- ô   ;@   == (D5 ô   ;=D   A- ô   ;   == D- ô   ;   == /D~ ="".*SurfaceÂ·PutPixel - ô   ;   == D- ô   ;    == D~ =go.string."toSDL" - ô   ;¤   == D- ô   ;¨   =A~ =type.func() *fungo/sdl.Surface - ô   ;== %D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =ànA- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."func() *sdl.Surface" - ô   ;   == D- ô   ;   =A- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =A- ô   ;(   =A- ô   ;,   == 8   D- ô   ;0   =   A- ô   ;4   =   A- ô   ;8   == D5 ô   ;=<   A- ô   ;¬   == D- ô   ;°   == 1D~ ="".*SurfaceÂ·toSDL - ô   ;´   == D- ô   ;¸   == D5 ô   =¼   A~ =type.*runtime.PtrType - ô   ;'== D- ô   ;   '==    'D- ô   ;   '=   A- ô   ;   '=U.£A- ô   ;   '=A- ô   ;   '=   A- ô   ;   '=   A- ô   ;   '=   A~ =go.string."*draw.Surface" - ô   ;   '== D- ô   ;   '== D~ = type."".Surface - ô   ;   '==  D5 ô   '=    A~ =!type.func(*fungo/sdl.Surface) *"".Surface - ô   ;!== %D- ô   ;   !==    !D- ô   ;   !=   A- ô   ;   !=}ð3A- ô   ;   !=A- ô   ;   !=   A- ô   ;   !=   A- ô   ;   !=   A~ ="go.string."func(*sdl.Surface) *draw.Surface" - ô   ;   !== "D- ô   ;   !=A- ô   ;   !=A- ô   ;    !== 8   !D- ô   ;$   !=   A- ô   ;(   !=   A- ô   ;,   !== <   !D- ô   ;0   !=   A- ô   ;4   !=   A- ô   ;8   !== D- ô   ;<   !== 'D5 ô   ;!=@   A~ =#type.**"".Surface - ô   ;#== D- ô   ;   #==    #D- ô   ;   #=   A- ô   ;   #=¶¦¼A- ô   ;   #=A- ô   ;   #=   A- ô   ;   #=   A- ô   ;   #=   A~ =$go.string."**draw.Surface" - ô   ;   #== $D- ô   ;   #=A- ô   ;   #== 'D5 ô   ;#=    A~ =%type.func(int32) **"".Surface ~ =&type.*runtime.FuncType - ô   ;%== &D- ô   ;   %==    %D- ô   ;   %=   A- ô   ;   %=5ÉYA- ô   ;   %=A- ô   ;   %=   A- ô   ;   %=   A- ô   ;   %=   A~ ='go.string."func(int32) **draw.Surface" - ô   ;   %== 'D- ô   ;   %=A- ô   ;   %=A- ô   ;    %== 8   %D- ô   ;$   %=   A- ô   ;(   %=   A- ô   ;,   %== <   %D- ô   ;0   %=   A- ô   ;4   %=   A~ =(type.int32 - ô   ;8   %== (D- ô   ;<   %== #D5 ô   ;%=@   A~ =)type.func(int32) *uint32 - ô   ;)== &D- ô   ;   )==    )D- ô   ;   )=   A- ô   ;   )=\íA- ô   ;   )=A- ô   ;   )=   A- ô   ;   )=   A- ô   ;   )=   A~ =*go.string."func(int32) *uint32" - ô   ;   )== *D- ô   ;   )=A- ô   ;   )=A- ô   ;    )== 8   )D- ô   ;$   )=   A- ô   ;(   )=   A- ô   ;,   )== <   )D- ô   ;0   )=   A- ô   ;4   )=   A- ô   ;8   )== (D~ =+type.*uint32 - ô   ;<   )== +D5 ô   ;)=@   A~ =,type.func(**"".Surface, *uint32, uintptr, int, int) - ô   ;,== &D- ô   ;   ,==    ,D- ô   ;   ,=   A- ô   ;   ,=°PA- ô   ;   ,=A- ô   ;   ,=   A- ô   ;   ,=   A- ô   ;   ,=   A~ =-go.string."func(**draw.Surface, *uint32, uintptr, int, int)" - ô   ;   ,== -D- ô   ;   ,=A- ô   ;   ,=A- ô   ;    ,== 8   ,D- ô   ;$   ,=   A- ô   ;(   ,=   A- ô   ;,   ,== L   ,D- ô   ;0   ,=A- ô   ;4   ,=A- ô   ;8   ,== #D- ô   ;<   ,== +D~ =.type.uintptr - ô   ;@   ,== .D~ =/type.int - ô   ;D   ,== /D- ô   ;H   ,== /D5 ô   ;,=L   A~ =0type.func(int, int) - ô   ;0== &D- ô   ;   0==    0D- ô   ;   0=   A- ô   ;   0=%ÇA- ô   ;   0=A- ô   ;   0=   A- ô   ;   0=   A- ô   ;   0=   A~ =1go.string."func(int, int)" - ô   ;   0== 1D- ô   ;   0=A- ô   ;   0=A- ô   ;    0== 8   0D- ô   ;$   0=   A- ô   ;(   0=   A- ô   ;,   0== @   0D- ô   ;0   0=A- ô   ;4   0=A- ô   ;8   0== /D- ô   ;<   0== /D5 ô   ;0=@   A~ =type.func(int, func(**"".Surface, *uint32, uintptr, int, int), **"".Surface, *uint32) func(int, int) - ô   ;== &D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =q~\A- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."func(int, func(**draw.Surface, *uint32, uintptr, int, int), **draw.Surface, *uint32) func(int, int)" - ô   ;   == D- ô   ;   =A- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =   A- ô   ;(   =   A- ô   ;,   == H   D- ô   ;0   =   A- ô   ;4   =   A- ô   ;8   == /D- ô   ;<   == ,D- ô   ;@   == #D- ô   ;D   == +D- ô   ;H   == 0D5 ô   ;=L   A~ =type._."".DrawCallback ~ =go.string."DrawCallback" - ô   ;== D~ =go.importpath."". - ô   ;   == D- ô   ;   ==    D- ô   ;   =A- ô   ;   =A5 ô   =   A~ =type."".DrawCallback - ô   ;== &D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =|9IA- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."draw.DrawCallback" - ô   ;   == D- ô   ;   == D- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =   A- ô   ;(   =   A- ô   ;,   == @   D- ô   ;0   =A- ô   ;4   =A- ô   ;8   == /D- ô   ;<   == /D5 ô   =@   A~ =type.func(int, int, int, int, "".DrawCallback) - ô   ;== &D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =rºé¸A- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =	go.string."func(int, int, int, int, draw.DrawCallback)" - ô   ;   == 	D- ô   ;   =A- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =   A- ô   ;(   =   A- ô   ;,   == L   D- ô   ;0   =A- ô   ;4   =A- ô   ;8   == /D- ô   ;<   == /D- ô   ;@   == /D- ô   ;D   == /D- ô   ;H   == D5 ô   ;=L   A~ =
type.func(int, int, int, "".DrawCallback) - ô   ;
== &D- ô   ;   
==    
D- ô   ;   
=   A- ô   ;   
=èGò4A- ô   ;   
=A- ô   ;   
=   A- ô   ;   
=   A- ô   ;   
=   A~ =go.string."func(int, int, int, draw.DrawCallback)" - ô   ;   
== D- ô   ;   
=A- ô   ;   
=A- ô   ;    
== 8   
D- ô   ;$   
=   A- ô   ;(   
=   A- ô   ;,   
== H   
D- ô   ;0   
=A- ô   ;4   
=A- ô   ;8   
== /D- ô   ;<   
== /D- ô   ;@   
== /D- ô   ;D   
== D5 ô   ;
=H   A~ =type.func(int) int - ô   ;== &D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =<2A- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."func(int) int" - ô   ;   == D- ô   ;   =A- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =   A- ô   ;(   =   A- ô   ;,   == <   D- ô   ;0   =   A- ô   ;4   =   A- ô   ;8   == /D- ô   ;<   == /D5 ô   ;=@   A~ =type.func(bool, int, int) int - ô   ;== &D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =µ¬NA- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."func(bool, int, int) int" - ô   ;   == D- ô   ;   =A- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =   A- ô   ;(   =   A- ô   ;,   == D   D- ô   ;0   =   A- ô   ;4   =   A~ =type.bool - ô   ;8   == D- ô   ;<   == /D- ô   ;@   == /D- ô   ;D   == /D5 ô   ;=H   A~ =type.*"".DrawCallback - ô   ;== D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =ð5fÈA- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."*draw.DrawCallback" - ô   ;   == D- ô   ;   =A- ô   ;   == D5 ô   =    A~ =type.func() - ô   ;== &D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =ö¼öA- ô   ;   =A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."func()" - ô   ;   == D- ô   ;   =A- ô   ;   =A- ô   ;    == 8   D- ô   ;$   =A- ô   ;(   =A- ô   ;,   == 8   D- ô   ;0   =A- ô   ;4   =A5 ô   ;=8   A~ =type._."".Drawable ~ =go.string."Drawable" - ô   ;== D- ô   ;   == D- ô   ;   ==    D- ô   ;   =A- ô   ;   =A5 ô   =   A~ =type."".Drawable ~ =type.*runtime.InterfaceType - ô   ;== D- ô   ;   ==    D- ô   ;   =   A- ô   ;   =Éã~ÖA- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A- ô   ;   =   A~ =go.string."draw.Drawable" - ô   ;   == D- ô   ;   == D- ô   ;   == (   D- ô   ;    =   A- ô   ;$   =   A~ =go.string."BlendPixel" - ô   ;(   == D- ô   ;,   =A~ =type.func(int, int, uint32, uint8) - ô   ;0   == D~ =go.string."GetPixel" - ô   ;4   == D- ô   ;8   =A~ =type.func(int, int) uint32 - ô   ;<   == D~ =go.string."PutPixel" - ô   ;@   == D- ô   ;D   =A~ =type.func(int, int, uint32) - ô   ;H   == D5 ô   =L   A~ = type.*"".Drawable ~ =!type.*runtime.PtrType - ô   ; == !D- ô   ;    ==     D- ô   ;    =   A- ô   ;    =×üA- ô   ;    =A- ô   ;    =   A- ô   ;    =   A- ô   ;    =   A~ ="go.string."*draw.Drawable" - ô   ;    == "D- ô   ;    =A- ô   ;    == D5 ô    =    A~ =#go.importpath.runtime. ~ =$string."runtime" - ô   ;#== $D- ô   ;   #=   A5 ô   ;#=   A~ =%go.importpath.fungo/sdl. ~ =&string."fungo/sdl" - ô   ;%== &D- ô   ;   %=	   A5 ô   ;%=   A~ ='string."Surface" - ô   ;'= Surface 5 ô   ;'=   A~ =(go.string."Surface" - ô   ;(== 'D- ô   ;   (=   A5 ô   ;(=   A~ =)string."draw.Surface" - ô   ;)= draw.Sur- ô   ;   )= face    5 ô   ;)=   A~ =*go.string."draw.Surface" - ô   ;*== )D- ô   ;   *=   A5 ô   ;*=   A~ =+string."surface" - ô   ;+= surface 5 ô   ;+=   A~ =,go.string."surface" - ô   ;,== +D- ô   ;   ,=   A5 ô   ;,=   A~ =-string."sdl" - ô   ;-= sdl     5 ô   ;-=   A~ =.go.string."sdl" - ô   ;.== -D- ô   ;   .=   A5 ô   ;.=   A~ =/string."func(*draw.Surface, int, int, uint32, uint8)" - ô   ;/= func(*dr- ô   ;   /= aw.Surfa- ô   ;   /= ce, int,- ô   ;   /=  int, ui- ô   ;    /= nt32, ui- ô   ;(   /= nt8)    5 ô   ;/=-   A~ =0go.string."func(*draw.Surface, int, int, uint32, uint8)" - ô   ;0== /D- ô   ;   0=,   A5 ô   ;0=   A~ =1string."func(*draw.Surface, int, int, int, uint32)" - ô   ;1= func(*dr- ô   ;   1= aw.Surfa- ô   ;   1= ce, int,- ô   ;   1=  int, in- ô   ;    1= t, uint3- ô   ;(   1= 2)      5 ô   ;1=+   A~ =go.string."func(*draw.Surface, int, int, int, uint32)" - ô   ;== 1D- ô   ;   =*   A5 ô   ;=   A~ =string."func(*draw.Surface, int, int, int, int, uint32)" - ô   ;= func(*dr- ô   ;   = aw.Surfa- ô   ;   = ce, int,- ô   ;   =  int, in- ô   ;    = t, int, - ô   ;(   = uint32) 5 ô   ;=0   A~ =go.string."func(*draw.Surface, int, int, int, int, uint32)" - ô   ;== D- ô   ;   =/   A5 ô   ;=   A~ =string."func(*draw.Surface, int, int) uint32" - ô   ;= func(*dr- ô   ;   = aw.Surfa- ô   ;   = ce, int,- ô   ;   =  int) ui- ô   ;    = nt32    5 ô   ;=%   A~ =go.string."func(*draw.Surface, int, int) uint32" - ô   ;== D- ô   ;   =$   A5 ô   ;=   A~ =string."func(*draw.Surface, int, int, uint32)" - ô   ;= func(*dr- ô   ;   = aw.Surfa- ô   ;   = ce, int,- ô   ;   =  int, ui- ô   ;    = nt32)   5 ô   ;=&   A~ =go.string."func(*draw.Surface, int, int, uint32)" - ô   ;== D- ô   ;   =%   A5 ô   ;=   A~ =string."func(*draw.Surface) *sdl.Surface" - ô   ;= func(*dr- ô   ;   = aw.Surfa- ô   ;   = ce) *sdl- ô   ;   = .Surface- ô   ;    =         5 ô   ;=!   A~ =	go.string."func(*draw.Surface) *sdl.Surface" - ô   ;	== D- ô   ;   	=    A5 ô   ;	=   A~ =
string."BlendPixel" - ô   ;
= BlendPix- ô   ;   
= el      5 ô   ;
=   A- ô   ;== 
D- ô   ;   =
   A5 ô   ;=   A~ =string."func(int, int, uint32, uint8)" - ô   ;= func(int- ô   ;   = , int, u- ô   ;   = int32, u- ô   ;   = int8)   5 ô   ;=   A~ =go.string."func(int, int, uint32, uint8)" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."Circle" - ô   ;= Circle  5 ô   ;=   A~ =go.string."Circle" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."func(int, int, int, uint32)" - ô   ;= func(int- ô   ;   = , int, i- ô   ;   = nt, uint- ô   ;   = 32)     5 ô   ;=   A~ =go.string."func(int, int, int, uint32)" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."Ellipse" - ô   ;= Ellipse 5 ô   ;=   A~ =go.string."Ellipse" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."func(int, int, int, int, uint32)" - ô   ;= func(int- ô   ;   = , int, i- ô   ;   = nt, int,- ô   ;   =  uint32)- ô   ;    =         5 ô   ;=!   A~ =go.string."func(int, int, int, int, uint32)" - ô   ;== D- ô   ;   =    A5 ô   ;=   A~ =string."GetPixel" - ô   ;= GetPixel- ô   ;   =         5 ô   ;=	   A- ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."func(int, int) uint32" - ô   ;= func(int- ô   ;   = , int) u- ô   ;   = int32   5 ô   ;=   A~ =go.string."func(int, int) uint32" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."Line" - ô   ;= Line    5 ô   ;=   A~ =go.string."Line" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."PutPixel" - ô   ;= PutPixel- ô   ;   =         5 ô   ;=	   A- ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."func(int, int, uint32)" - ô   ;= func(int- ô   ;   = , int, u- ô   ;   = int32)  5 ô   ;=   A~ =go.string."func(int, int, uint32)" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."toSDL" - ô   ;= toSDL   5 ô   ;=   A~ =go.string."toSDL" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."func() *sdl.Surface" - ô   ;= func() *- ô   ;   = sdl.Surf- ô   ;   = ace     5 ô   ;=   A~ = go.string."func() *sdl.Surface" - ô   ; == D- ô   ;    =   A5 ô   ; =   A~ =!string."*draw.Surface" - ô   ;!= *draw.Su- ô   ;   != rface   5 ô   ;!=   A~ ="go.string."*draw.Surface" - ô   ;"== !D- ô   ;   "=   A5 ô   ;"=   A~ =#string."func(*sdl.Surface) *draw.Surface" - ô   ;#= func(*sd- ô   ;   #= l.Surfac- ô   ;   #= e) *draw- ô   ;   #= .Surface- ô   ;    #=         5 ô   ;#=!   A~ =$go.string."func(*sdl.Surface) *draw.Surface" - ô   ;$== #D- ô   ;   $=    A5 ô   ;$=   A~ =%string."**draw.Surface" - ô   ;%= **draw.S- ô   ;   %= urface  5 ô   ;%=   A~ =&go.string."**draw.Surface" - ô   ;&== %D- ô   ;   &=   A5 ô   ;&=   A~ ='string."func(int32) **draw.Surface" - ô   ;'= func(int- ô   ;   '= 32) **dr- ô   ;   '= aw.Surfa- ô   ;   '= ce      5 ô   ;'=   A~ =(go.string."func(int32) **draw.Surface" - ô   ;(== 'D- ô   ;   (=   A5 ô   ;(=   A~ =)string."func(int32) *uint32" - ô   ;)= func(int- ô   ;   )= 32) *uin- ô   ;   )= t32     5 ô   ;)=   A~ =*go.string."func(int32) *uint32" - ô   ;*== )D- ô   ;   *=   A5 ô   ;*=   A~ =+string."func(**draw.Surface, *uint32, uintptr, int, int)" - ô   ;+= func(**d- ô   ;   += raw.Surf- ô   ;   += ace, *ui- ô   ;   += nt32, ui- ô   ;    += ntptr, i- ô   ;(   += nt, int)- ô   ;0   +=         5 ô   ;+=1   A~ =,go.string."func(**draw.Surface, *uint32, uintptr, int, int)" - ô   ;,== +D- ô   ;   ,=0   A5 ô   ;,=   A~ =-string."func(int, int)" - ô   ;-= func(int- ô   ;   -= , int)  5 ô   ;-=   A~ =.go.string."func(int, int)" - ô   ;.== -D- ô   ;   .=   A5 ô   ;.=   A~ =/string."func(int, func(**draw.Surface, *uint32, uintptr, int, int), **draw.Surface, *uint32) func(int, int)" - ô   ;/= func(int- ô   ;   /= , func(*- ô   ;   /= *draw.Su- ô   ;   /= rface, *- ô   ;    /= uint32, - ô   ;(   /= uintptr,- ô   ;0   /=  int, in- ô   ;8   /= t), **dr- ô   ;@   /= aw.Surfa- ô   ;H   /= ce, *uin- ô   ;P   /= t32) fun- ô   ;X   /= c(int, i- ô   ;`   /= nt)     5 ô   ;/=d   A~ =0go.string."func(int, func(**draw.Surface, *uint32, uintptr, int, int), **draw.Surface, *uint32) func(int, int)" - ô   ;0== /D- ô   ;   0=c   A5 ô   ;0=   A~ =1string."DrawCallback" - ô   ;1= DrawCall- ô   ;   1= back    5 ô   ;1=   A~ =go.string."DrawCallback" - ô   ;== 1D- ô   ;   =   A5 ô   ;=   A~ =string."draw.DrawCallback" - ô   ;= draw.Dra- ô   ;   = wCallbac- ô   ;   = k       5 ô   ;=   A~ =go.string."draw.DrawCallback" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."func(int, int, int, int, draw.DrawCallback)" - ô   ;= func(int- ô   ;   = , int, i- ô   ;   = nt, int,- ô   ;   =  draw.Dr- ô   ;    = awCallba- ô   ;(   = ck)     5 ô   ;=,   A~ =go.string."func(int, int, int, int, draw.DrawCallback)" - ô   ;== D- ô   ;   =+   A5 ô   ;=   A~ =string."func(int, int, int, draw.DrawCallback)" - ô   ;= func(int- ô   ;   = , int, i- ô   ;   = nt, draw- ô   ;   = .DrawCal- ô   ;    = lback)  5 ô   ;='   A~ =go.string."func(int, int, int, draw.DrawCallback)" - ô   ;== D- ô   ;   =&   A5 ô   ;=   A~ =string."func(int) int" - ô   ;= func(int- ô   ;   = ) int   5 ô   ;=   A~ =	go.string."func(int) int" - ô   ;	== D- ô   ;   	=   A5 ô   ;	=   A~ =
string."func(bool, int, int) int" - ô   ;
= func(boo- ô   ;   
= l, int, - ô   ;   
= int) int- ô   ;   
=         5 ô   ;
=   A~ =go.string."func(bool, int, int) int" - ô   ;== 
D- ô   ;   =   A5 ô   ;=   A~ =string."*draw.DrawCallback" - ô   ;= *draw.Dr- ô   ;   = awCallba- ô   ;   = ck      5 ô   ;=   A~ =go.string."*draw.DrawCallback" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."func()" - ô   ;= func()  5 ô   ;=   A~ =go.string."func()" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."Drawable" - ô   ;= Drawable- ô   ;   =         5 ô   ;=	   A~ =go.string."Drawable" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."draw.Drawable" - ô   ;= draw.Dra- ô   ;   = wable   5 ô   ;=   A~ =go.string."draw.Drawable" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."*draw.Drawable" - ô   ;= *draw.Dr- ô   ;   = awable  5 ô   ;=   A~ =go.string."*draw.Drawable" - ô   ;== D- ô   ;   =   A5 ô   ;=   A~ =string."runtime" - ô   ;= runtime 5 ô   ;=   A~ =string."fungo/sdl" - ô   ;= fungo/sd- ô   ;   = l       5 ô   ;=
   AM      